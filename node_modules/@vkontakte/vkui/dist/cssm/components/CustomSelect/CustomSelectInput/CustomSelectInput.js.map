{"version":3,"sources":["../../../../../src/components/CustomSelect/CustomSelectInput/CustomSelectInput.tsx"],"sourcesContent":["'use client';\n/* eslint-disable jsdoc/require-jsdoc */\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useAdaptivity } from '../../../hooks/useAdaptivity';\nimport { useExternRef } from '../../../hooks/useExternRef';\nimport { useFocusWithin } from '../../../hooks/useFocusWithin';\nimport { usePlatform } from '../../../hooks/usePlatform';\nimport { getFormFieldModeFromSelectType } from '../../../lib/select';\nimport type { HasAlign, HasRef, HasRootRef } from '../../../types';\nimport { FormField, type FormFieldProps } from '../../FormField/FormField';\nimport type { SelectType } from '../../Select/Select';\nimport { SelectTypography } from '../../SelectTypography/SelectTypography';\nimport { Text } from '../../Typography/Text/Text';\nimport { VisuallyHidden } from '../../VisuallyHidden/VisuallyHidden';\nimport styles from './CustomSelectInput.module.css';\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  compact: styles.sizeYCompact,\n};\n\nexport interface CustomSelectInputProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    HasRef<HTMLInputElement>,\n    HasRootRef<HTMLDivElement>,\n    HasAlign,\n    Omit<FormFieldProps, 'mode' | 'type' | 'maxHeight'> {\n  selectType?: SelectType;\n  multiline?: boolean;\n  labelTextTestId?: string;\n  fetching?: boolean;\n  searchable?: boolean;\n  accessible?: boolean;\n}\n\n/**\n * @since 5.10.0\n * @private\n */\nexport const CustomSelectInput = ({\n  align = 'left',\n  getRef,\n  className,\n  getRootRef,\n  style,\n  before,\n  after,\n  status,\n  children,\n  placeholder,\n  selectType = 'default',\n  multiline,\n  disabled,\n  fetching,\n  labelTextTestId,\n  searchable,\n  accessible,\n  ...restProps\n}: CustomSelectInputProps): React.ReactNode => {\n  const { sizeY = 'none' } = useAdaptivity();\n\n  const title = children || placeholder;\n  const showLabelOrPlaceholder = !Boolean(restProps.value);\n\n  const handleRootRef = useExternRef(getRootRef);\n  const focusWithin = useFocusWithin(handleRootRef);\n\n  const inputReadonly = restProps.readOnly || (disabled && fetching);\n\n  const input = (\n    <Text\n      type=\"text\"\n      {...restProps}\n      disabled={disabled && !fetching}\n      readOnly={inputReadonly}\n      Component=\"input\"\n      normalize={false}\n      className={classNames(\n        styles.el,\n        (restProps.readOnly || (showLabelOrPlaceholder && !focusWithin)) && styles.elCursorPointer,\n      )}\n      getRootRef={getRef}\n      placeholder={children ? '' : placeholder}\n    />\n  );\n\n  const inputHidden = React.useMemo(() => {\n    if (accessible) {\n      if (!searchable) {\n        return true;\n      }\n      return !focusWithin || (inputReadonly && !fetching);\n    } else {\n      return false;\n    }\n  }, [accessible, fetching, focusWithin, inputReadonly, searchable]);\n\n  const labelHidden = showLabelOrPlaceholder ? false : !inputHidden;\n\n  const platform = usePlatform();\n  return (\n    <FormField\n      Component=\"div\"\n      style={style}\n      className={classNames(\n        styles.host,\n        align === 'right' && styles.alignRight,\n        align === 'center' && styles.alignCenter,\n        !children && styles.empty,\n        multiline && styles.multiline,\n        sizeY !== 'regular' && sizeYClassNames[sizeY],\n        before && styles.hasBefore,\n        after && styles.hasAfter,\n        inputHidden && styles.inputHidden,\n        labelHidden && styles.labelHidden,\n        accessible && styles.accessible,\n        restProps.value && styles.hasInputValue,\n        className,\n      )}\n      getRootRef={handleRootRef}\n      before={before}\n      after={after}\n      disabled={disabled}\n      mode={getFormFieldModeFromSelectType(selectType)}\n      status={status}\n    >\n      <div className={styles.inputGroup}>\n        <div\n          className={classNames(styles.container, className)}\n          tabIndex={-1}\n          aria-hidden\n          data-testid={labelTextTestId}\n        >\n          <SelectTypography selectType={selectType} className={styles.title}>\n            {title}\n          </SelectTypography>\n        </div>\n        {/* Чтобы отключить autosuggestion в iOS, тултипы которого начинают всплывать даже когда input\n         * в режиме readonly, мы оборачиваем инпут в VisuallyHidden.\n         * Тултипы появляются при каждом клике на input.\n         * смотри: https://github.com/VKCOM/VKUI/issues/6205\n         *\n         * Достаточно не дать пользователю кликнуть по инпуту.\n         * Делаем это только для режима read-only. Потому что проблема именно в режиме read-only.\n         * Обертка вокруг инпута обрабатывает клики и передаёт фокус, так что на взаимодействии с инпутом это никак не скажется.\n         **/}\n        {restProps.readOnly && platform === 'ios' ? (\n          <VisuallyHidden>{input}</VisuallyHidden>\n        ) : (\n          input\n        )}\n      </div>\n    </FormField>\n  );\n};\n"],"names":["React","classNames","useAdaptivity","useExternRef","useFocusWithin","usePlatform","getFormFieldModeFromSelectType","FormField","SelectTypography","Text","VisuallyHidden","styles","sizeYClassNames","none","sizeYNone","compact","sizeYCompact","CustomSelectInput","align","getRef","className","getRootRef","style","before","after","status","children","placeholder","selectType","multiline","disabled","fetching","labelTextTestId","searchable","accessible","restProps","sizeY","title","showLabelOrPlaceholder","Boolean","value","handleRootRef","focusWithin","inputReadonly","readOnly","input","type","Component","normalize","el","elCursorPointer","inputHidden","useMemo","labelHidden","platform","host","alignRight","alignCenter","empty","hasBefore","hasAfter","hasInputValue","mode","div","inputGroup","container","tabIndex","aria-hidden","data-testid"],"mappings":"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"}
import * as React from 'react';
import { type HasComponent, type HasDataAttribute, type HTMLAttributesWithRootRef } from '../../../types';
import { type ChipOptionValue } from '../types';
export interface ChipProps extends HasComponent, HasDataAttribute, HTMLAttributesWithRootRef<HTMLElement> {
    /**
     * Режим отображения компонента.
     */
    mode?: 'primary' | 'secondary';
    /**
     * Значение чипа.
     */
    value?: ChipOptionValue;
    /**
     * Можно ли удалить чип.
     */
    removable?: boolean;
    /**
     * Блокировка взаимодействия с чипом.
     */
    disabled?: boolean;
    /**
     * Режим только для чтения.
     */
    readOnly?: boolean;
    /**
     * Текст для кнопки удаления.
     */
    removeLabel?: string;
    /**
     * Контент перед основным содержимым.
     */
    before?: React.ReactNode;
    /**
     * Контент после основного содержимого.
     */
    after?: React.ReactNode;
    /**
     * Обработчик удаления чипа.
     */
    onRemove?: (event: React.MouseEvent, value: ChipOptionValue) => void;
}
/**
 * @see https://vkui.io/components/chip
 */
export declare const Chip: ({ mode, Component, value, removable, onRemove, removeLabel, before, after, disabled, readOnly, children, className, onFocus: onFocusProp, onBlur: onBlurProp, ...restProps }: ChipProps) => React.ReactNode;
//# sourceMappingURL=Chip.d.ts.map
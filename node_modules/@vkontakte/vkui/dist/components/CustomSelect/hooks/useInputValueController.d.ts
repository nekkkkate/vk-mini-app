import * as React from 'react';
import { type SelectValue } from '../../NativeSelect/NativeSelect';
import { type SelectProps } from '../CustomSelect';
import { type CustomSelectOptionInterface } from '../types';
type UseInputValueControllerProps<OptionInterfaceT extends CustomSelectOptionInterface> = Pick<SelectProps<OptionInterfaceT>, 'options' | 'onInputChange' | 'accessible'> & {
    selectedValue: SelectValue;
};
export declare function useInputValueController<OptionInterfaceT extends CustomSelectOptionInterface>({ options, accessible, selectedValue, onInputChange: onInputChangeProp, }: UseInputValueControllerProps<OptionInterfaceT>): {
    inputValue: string;
    resetInputValue: () => void;
    resetInputValueBySelectedOption: () => void;
    onInputChange: React.ChangeEventHandler<HTMLInputElement>;
};
export {};
//# sourceMappingURL=useInputValueController.d.ts.map
{"version":3,"sources":["../../../../src/components/Popover/usePopover.tsx"],"sourcesContent":["import { type Ref, useCallback } from 'react';\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { useFloatingElement, type UseFloatingElementProps } from '../../hooks/useFloatingElement';\nimport { injectAriaExpandedPropByRole } from '../../lib/accessibility';\nimport { animationFadeClassNames, transformOriginClassNames } from '../../lib/animation';\nimport { type ReferenceProps } from '../../lib/floating/useFloatingWithInteractions/types';\nimport { AppRootPortal } from '../AppRoot/AppRootPortal';\nimport {\n  DEFAULT_ARROW_HEIGHT,\n  DEFAULT_ARROW_PADDING,\n  DefaultIcon,\n} from '../FloatingArrow/DefaultIcon';\nimport { FloatingArrow } from '../FloatingArrow/FloatingArrow';\nimport { FocusTrap } from '../FocusTrap/FocusTrap';\nimport { type PopoverProps } from './Popover';\nimport styles from './Popover.module.css';\n\nexport type UsePopoverProps = Omit<PopoverProps, 'children'> & {\n  [key: `data-${string}`]: string | number | boolean;\n};\n\nexport type UsePopoverResult<ElementType extends HTMLElement = HTMLElement> = {\n  /**\n   * Реф на якорный элемент.\n   */\n  anchorRef: Ref<ElementType>;\n  /**\n   * Свойства для якорного элемента, содержит необходимые обработчики.\n   */\n  anchorProps: ReferenceProps<ElementType>;\n  /**\n   * Отрендеренный компонент всплывающего элемента.\n   */\n  popover: React.ReactNode | null;\n};\n\nexport const usePopover = <ElementType extends HTMLElement = HTMLElement>({\n  // UsePopoverProps\n  arrow: withArrow,\n  arrowHeight = DEFAULT_ARROW_HEIGHT,\n  arrowPadding = DEFAULT_ARROW_PADDING,\n  placement = 'bottom-start',\n  onPlacementChange,\n  disableFlipMiddleware = false,\n  disableShiftMiddleware = false,\n  trigger = 'click',\n  strategy,\n  content,\n  hoverDelay = 150,\n  closeAfterClick,\n  offsetByMainAxis = 8,\n  offsetByCrossAxis = 0,\n  sameWidth,\n  hideWhenReferenceHidden,\n  onReferenceHiddenChange,\n  disabled,\n  disableInteractive,\n  disableCloseOnClickOutside,\n  disableCloseOnEscKey,\n  keepMounted = false,\n  customMiddlewares,\n  // uncontrolled\n  defaultShown = false,\n  // controlled\n  shown: shownProp,\n  onShownChange,\n  onShownChanged,\n\n  // Для AppRootPortal\n  usePortal = true,\n\n  // Для FloatingArrow\n  arrowProps,\n  ArrowIcon = DefaultIcon,\n\n  // FocusTrapProps\n  autoFocus = true,\n  restoreFocus = true,\n  className,\n  noStyling = false,\n  zIndex = 'var(--vkui--z_index_popout)',\n  disableFocusTrap,\n  // a11y\n  role = 'dialog',\n  ...restPopoverProps\n}: UsePopoverProps): UsePopoverResult<ElementType> => {\n  const renderFloatingComponent: UseFloatingElementProps<HTMLDivElement>['renderFloatingComponent'] =\n    React.useCallback(\n      ({\n        shown,\n        middlewareData,\n        placement: resolvedPlacement,\n        setArrowRef,\n        floatingRef,\n        floatingProps,\n        willBeHide,\n        onRestoreFocus,\n        onClose,\n      }) => {\n        if (!shown && !keepMounted) {\n          return null;\n        }\n        const hidden = keepMounted && !shown;\n\n        let arrow: React.ReactElement | null = null;\n        if (withArrow) {\n          const { arrow: arrowCoords } = middlewareData;\n          arrow = (\n            <FloatingArrow\n              iconClassName={noStyling ? undefined : styles.arrow}\n              {...arrowProps}\n              coords={arrowCoords}\n              placement={resolvedPlacement}\n              getRootRef={setArrowRef}\n              Icon={ArrowIcon}\n            />\n          );\n        }\n        return (\n          <AppRootPortal usePortal={usePortal}>\n            <div\n              ref={floatingRef}\n              className={classNames(styles.host, hidden && styles.hidden)}\n              {...floatingProps}\n              style={{\n                zIndex: !hidden ? zIndex : undefined,\n                ...floatingProps.style,\n              }}\n            >\n              <FocusTrap\n                {...restPopoverProps}\n                role={role}\n                className={classNames(\n                  styles.in,\n                  noStyling ? undefined : styles.inWithStyling,\n                  willBeHide ? animationFadeClassNames.out : animationFadeClassNames.in,\n                  transformOriginClassNames[resolvedPlacement],\n                  className,\n                )}\n                mount={!hidden}\n                disabled={hidden || disableFocusTrap}\n                autoFocus={disableInteractive ? false : autoFocus}\n                restoreFocus={restoreFocus ? () => onRestoreFocus(restoreFocus) : false}\n              >\n                {arrow}\n                {typeof content === 'function' ? content({ onClose }) : content}\n              </FocusTrap>\n            </div>\n          </AppRootPortal>\n        );\n      },\n      [\n        ArrowIcon,\n        arrowProps,\n        autoFocus,\n        className,\n        content,\n        disableFocusTrap,\n        disableInteractive,\n        keepMounted,\n        noStyling,\n        restPopoverProps,\n        restoreFocus,\n        role,\n        usePortal,\n        withArrow,\n        zIndex,\n      ],\n    );\n\n  const remapReferenceProps: Exclude<UseFloatingElementProps['remapReferenceProps'], undefined> =\n    useCallback(\n      ({ shown, ...referenceProps }) => injectAriaExpandedPropByRole(referenceProps, shown, role),\n      [role],\n    );\n\n  const { anchorRef, anchorProps, component } = useFloatingElement<ElementType, HTMLDivElement>({\n    arrow: withArrow,\n    arrowHeight,\n    arrowPadding,\n    placement,\n    offsetByMainAxis,\n    offsetByCrossAxis,\n    sameWidth,\n    hideWhenReferenceHidden,\n    disableFlipMiddleware,\n    disableShiftMiddleware,\n    customMiddlewares,\n\n    trigger,\n    strategy,\n    hoverDelay,\n    onReferenceHiddenChange,\n    closeAfterClick,\n    disabled,\n    disableInteractive,\n    disableCloseOnClickOutside,\n    disableCloseOnEscKey,\n    defaultShown,\n    shown: shownProp,\n    onShownChange,\n    onShownChanged,\n\n    onPlacementChange,\n    renderFloatingComponent,\n    remapReferenceProps,\n  });\n\n  return {\n    anchorRef,\n    anchorProps,\n    popover: component,\n  };\n};\n"],"names":["useCallback","React","classNames","useFloatingElement","injectAriaExpandedPropByRole","animationFadeClassNames","transformOriginClassNames","AppRootPortal","DEFAULT_ARROW_HEIGHT","DEFAULT_ARROW_PADDING","DefaultIcon","FloatingArrow","FocusTrap","styles","usePopover","arrow","withArrow","arrowHeight","arrowPadding","placement","onPlacementChange","disableFlipMiddleware","disableShiftMiddleware","trigger","strategy","content","hoverDelay","closeAfterClick","offsetByMainAxis","offsetByCrossAxis","sameWidth","hideWhenReferenceHidden","onReferenceHiddenChange","disabled","disableInteractive","disableCloseOnClickOutside","disableCloseOnEscKey","keepMounted","customMiddlewares","defaultShown","shown","shownProp","onShownChange","onShownChanged","usePortal","arrowProps","ArrowIcon","autoFocus","restoreFocus","className","noStyling","zIndex","disableFocusTrap","role","restPopoverProps","renderFloatingComponent","middlewareData","resolvedPlacement","setArrowRef","floatingRef","floatingProps","willBeHide","onRestoreFocus","onClose","hidden","arrowCoords","iconClassName","undefined","coords","getRootRef","Icon","div","ref","host","style","in","inWithStyling","out","mount","remapReferenceProps","referenceProps","anchorRef","anchorProps","component","popover"],"mappings":"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"}
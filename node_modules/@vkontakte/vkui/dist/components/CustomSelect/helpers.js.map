{"version":3,"sources":["../../../src/components/CustomSelect/helpers.ts"],"sourcesContent":["import { getTextFromChildren } from '../../lib/children';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { NOT_SELECTED, type SelectValue } from '../NativeSelect/NativeSelect';\nimport { type SelectProps } from './CustomSelect';\nimport { type CustomSelectOptionInterface } from './types';\n\nexport const findIndexAfter = (options: CustomSelectOptionInterface[] = [], startIndex = -1) => {\n  if (startIndex >= options.length - 1) {\n    return -1;\n  }\n  return options.findIndex((option, i) => i > startIndex && !option.disabled);\n};\n\nexport const findIndexBefore = (\n  options: CustomSelectOptionInterface[] = [],\n  endIndex: number = options.length,\n) => {\n  let result = -1;\n  if (endIndex <= 0) {\n    return result;\n  }\n  for (let i = endIndex - 1; i >= 0; i--) {\n    let option = options[i];\n\n    if (!option.disabled) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n};\nconst warn = warnOnce('CustomSelect');\n\nexport const checkOptionsValueType = <T extends CustomSelectOptionInterface>(options: T[]) => {\n  if (new Set(options.map((item) => typeof item.value)).size > 1) {\n    warn(\n      'Некоторые значения ваших опций имеют разные типы. onChange всегда возвращает строковый тип.',\n      'error',\n    );\n  }\n};\n\nexport const checkMixControlledAndUncontrolledState = (\n  oldIsControlled: boolean,\n  newIsControlled: boolean,\n) => {\n  if (!oldIsControlled && newIsControlled) {\n    warn(\n      `Похоже, что компонент был переведен из состояния Uncontrolled в Controlled. Пожалуйста, не делайте так. Если вам нужно отобразить невыбранное состояние компонента, используйте value=null вместо undefined`,\n      'error',\n    );\n  }\n  if (oldIsControlled && !newIsControlled) {\n    warn(\n      `Похоже, что компонент был переведен из состояния Controlled в Uncontrolled. Пожалуйста, не делайте так. Если вам нужно отобразить невыбранное состояние компонента, используйте value=null вместо undefined`,\n      'error',\n    );\n  }\n};\n\nexport function findSelectedIndex<T extends CustomSelectOptionInterface>(\n  options: T[] = [],\n  value: SelectValue,\n) {\n  if (value === NOT_SELECTED.CUSTOM) {\n    return -1;\n  }\n  return (\n    options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    }) ?? -1\n  );\n}\n\nexport function getOptionByValue<T extends CustomSelectOptionInterface>(\n  options: T[] = [],\n  value: SelectValue,\n): T | null {\n  const index = findSelectedIndex(options, value);\n  if (index === -1) {\n    return null;\n  }\n  return options[index];\n}\n\nexport const filter = <T extends CustomSelectOptionInterface>(\n  options: SelectProps<T>['options'],\n  inputValue: string,\n  filterFn: SelectProps<T>['filterFn'],\n) => {\n  return typeof filterFn === 'function'\n    ? options.filter((option) => filterFn(inputValue, option))\n    : options;\n};\n\nexport function calculateInputValueFromOptions<T extends CustomSelectOptionInterface>(\n  options: T[] = [],\n  selectValue: SelectValue,\n) {\n  const selectedOption = getOptionByValue(options, selectValue);\n  return selectedOption ? getTextFromChildren(selectedOption.label) : '';\n}\n"],"names":["getTextFromChildren","warnOnce","NOT_SELECTED","findIndexAfter","options","startIndex","length","findIndex","option","i","disabled","findIndexBefore","endIndex","result","warn","checkOptionsValueType","Set","map","item","value","size","checkMixControlledAndUncontrolledState","oldIsControlled","newIsControlled","findSelectedIndex","CUSTOM","Number","getOptionByValue","index","filter","inputValue","filterFn","calculateInputValueFromOptions","selectValue","selectedOption","label"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,wBAAqB;AACzD,SAASC,QAAQ,QAAQ,wBAAqB;AAC9C,SAASC,YAAY,QAA0B,kCAA+B;AAI9E,OAAO,MAAMC,iBAAiB,CAACC,UAAyC,EAAE,EAAEC,aAAa,CAAC,CAAC;IACzF,IAAIA,cAAcD,QAAQE,MAAM,GAAG,GAAG;QACpC,OAAO,CAAC;IACV;IACA,OAAOF,QAAQG,SAAS,CAAC,CAACC,QAAQC,IAAMA,IAAIJ,cAAc,CAACG,OAAOE,QAAQ;AAC5E,EAAE;AAEF,OAAO,MAAMC,kBAAkB,CAC7BP,UAAyC,EAAE,EAC3CQ,WAAmBR,QAAQE,MAAM;IAEjC,IAAIO,SAAS,CAAC;IACd,IAAID,YAAY,GAAG;QACjB,OAAOC;IACT;IACA,IAAK,IAAIJ,IAAIG,WAAW,GAAGH,KAAK,GAAGA,IAAK;QACtC,IAAID,SAASJ,OAAO,CAACK,EAAE;QAEvB,IAAI,CAACD,OAAOE,QAAQ,EAAE;YACpBG,SAASJ;YACT;QACF;IACF;IACA,OAAOI;AACT,EAAE;AACF,MAAMC,OAAOb,SAAS;AAEtB,OAAO,MAAMc,wBAAwB,CAAwCX;IAC3E,IAAI,IAAIY,IAAIZ,QAAQa,GAAG,CAAC,CAACC,OAAS,OAAOA,KAAKC,KAAK,GAAGC,IAAI,GAAG,GAAG;QAC9DN,KACE,+FACA;IAEJ;AACF,EAAE;AAEF,OAAO,MAAMO,yCAAyC,CACpDC,iBACAC;IAEA,IAAI,CAACD,mBAAmBC,iBAAiB;QACvCT,KACE,CAAC,2MAA2M,CAAC,EAC7M;IAEJ;IACA,IAAIQ,mBAAmB,CAACC,iBAAiB;QACvCT,KACE,CAAC,2MAA2M,CAAC,EAC7M;IAEJ;AACF,EAAE;AAEF,OAAO,SAASU,kBACdpB,UAAe,EAAE,EACjBe,KAAkB;IAElB,IAAIA,UAAUjB,aAAauB,MAAM,EAAE;QACjC,OAAO,CAAC;IACV;QAEErB;IADF,OACEA,CAAAA,qBAAAA,QAAQG,SAAS,CAAC,CAACW;QACjBC,QAAQ,OAAOD,KAAKC,KAAK,KAAK,WAAWO,OAAOP,SAASA;QACzD,OAAOD,KAAKC,KAAK,KAAKA;IACxB,gBAHAf,gCAAAA,qBAGM,CAAC;AAEX;AAEA,OAAO,SAASuB,iBACdvB,UAAe,EAAE,EACjBe,KAAkB;IAElB,MAAMS,QAAQJ,kBAAkBpB,SAASe;IACzC,IAAIS,UAAU,CAAC,GAAG;QAChB,OAAO;IACT;IACA,OAAOxB,OAAO,CAACwB,MAAM;AACvB;AAEA,OAAO,MAAMC,SAAS,CACpBzB,SACA0B,YACAC;IAEA,OAAO,OAAOA,aAAa,aACvB3B,QAAQyB,MAAM,CAAC,CAACrB,SAAWuB,SAASD,YAAYtB,WAChDJ;AACN,EAAE;AAEF,OAAO,SAAS4B,+BACd5B,UAAe,EAAE,EACjB6B,WAAwB;IAExB,MAAMC,iBAAiBP,iBAAiBvB,SAAS6B;IACjD,OAAOC,iBAAiBlC,oBAAoBkC,eAAeC,KAAK,IAAI;AACtE"}